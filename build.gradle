plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.freefair.lombok' version '8.3'
    id 'application'
}

application {
    mainClass = 'eu.innowise.MigrationCli'
}

group = 'eu.innowise'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'eu.innowise.MigrationCli'
        )
    }
}

dependencies {
    implementation 'com.zaxxer:HikariCP:4.0.3'
    runtimeOnly 'org.postgresql:postgresql:42.7.3'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'com.h2database:h2:2.1.214'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'

    implementation 'commons-codec:commons-codec:1.15'

    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.12'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.register('fatJar', Jar) {
    manifest {
        attributes(
                'Main-Class': 'eu.innowise.MigrationCli'
        )
    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

build.dependsOn fatJar

publishing {
    publications {
        myLib(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "localMaven"
            url = uri("$rootDir/.m2/repository")
        }
    }
}

test {
    useJUnitPlatform()
}